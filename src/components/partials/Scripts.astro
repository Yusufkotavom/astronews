---
// Scripts component for global JavaScript
---

<!-- Theme initialization script to prevent FOUC -->
<script is:inline>
  // Immediately set theme to prevent flash
  (function() {
    // Check both localStorage keys for compatibility
    const savedTheme = localStorage.getItem('color-theme') || localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  })();
</script>

<!-- Flowbite JavaScript is now handled by the Tailwind plugin for better performance -->

<!-- Scripts component for global JavaScript -->
<script>
  // Simple DOM ready handler
  document.addEventListener('DOMContentLoaded', function() {
    // No animations - focus on performance
  });

  // Enhanced theme toggle functionality
  function initGlobalThemeToggle() {
    // This function ensures theme consistency across all components
    const themeToggles = document.querySelectorAll('[id*="themeToggle"]');
    const themeIcons = document.querySelectorAll('[id*="ThemeToggleDarkIcon"], [id*="ThemeToggleLightIcon"]');
    
    function updateAllThemeIcons() {
      const isDark = document.documentElement.classList.contains('dark');
      
      themeIcons.forEach(icon => {
        const isDarkIcon = icon.id.includes('DarkIcon');
        const isLightIcon = icon.id.includes('LightIcon');
        
        if (isDarkIcon) {
          icon.classList.toggle('hidden', isDark);
        } else if (isLightIcon) {
          icon.classList.toggle('hidden', !isDark);
        }
      });
    }
    
    // Update icons on page load
    updateAllThemeIcons();
    
    // Listen for theme changes
    const observer = new MutationObserver(function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
          updateAllThemeIcons();
        }
      });
    });
    
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    });
  }

  // Initialize global theme toggle
  initGlobalThemeToggle();

  // Simple anchor link handling
  document.addEventListener('DOMContentLoaded', function() {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        if (targetId) {
          const targetElement = document.querySelector(targetId);
          
          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: 'auto',
              block: 'start'
            });
          }
        }
      });
    });
  });

  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });

  // Form validation and submission
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('form');
    
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        const requiredFields = form.querySelectorAll('[required]');
        let isValid = true;
        
        requiredFields.forEach(field => {
          const input = field as HTMLInputElement;
          if (!input.value.trim()) {
            isValid = false;
            input.classList.add('border-red-500');
          } else {
            input.classList.remove('border-red-500');
          }
        });
        
        if (!isValid) {
          e.preventDefault();
          alert('Please fill in all required fields.');
        }
      });
    });
  });

  // Simple image loading
  document.addEventListener('DOMContentLoaded', function() {
    // Basic image loading - no lazy loading overhead
  });
</script> 